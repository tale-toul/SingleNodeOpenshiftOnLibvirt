---
- name: Local tasks
  hosts: 127.0.0.1
  connection: local
  become: no
  tasks:
    - name: Remove stale entries from known_hosts file in the ansible host
      command: ssh-keygen -R {{ item }}
      loop:
        - "{{ groups['support'] | first }}"
      ignore_errors: yes
    - name: Save terraform variables to a file
      shell: terraform output |tr '=' ':' > ../../Ansible/group_vars/all/support_terraform_outputs.var
      args:
        chdir: ../Terraform/libvirt/
    - name: Load terraform output variables
      include_vars:
        dir: group_vars/all
        extensions:
          - 'data'
          - 'var'
        ignore_unknown_extensions: yes
    - name: Update support group in inventory file
      blockinfile:
        path: inventory
        marker: "# {mark} Ansible block for support and provision"
        insertafter: "^\\[support\\]$"
        block: |
          {{ support_host_ip }}
    - name: Update support vars in inventory file
      blockinfile:
        path: inventory
        marker: "# {mark} Ansible block for support variables"
        insertafter: "^\\[support:vars\\]$"
        block: |
           ansible_ssh_common_args='-o ProxyJump="ec2-user@{{ baremetal_public_ip }}"' 
    - name: Reload inventory
      meta: refresh_inventory

- name: Set up support VM
  hosts: support
  gather_facts: no
  tasks:
    - name: Load terraform output variables
      include_vars:
        dir: group_vars/all
        extensions:
          - 'data'
          - 'var'
        ignore_unknown_extensions: yes
    - name: Wait for support VM connection to become available
      wait_for_connection:
        timeout: 300
    - name: Assing a FQDN name to the support VM
      hostname:
          name: "support.{{ dns_zone }}"
    - name: Subscribe support VM with Red Hat
      redhat_subscription:
        state: present
        activationkey: "{{ subscription_activationkey }}"
        org_id: "{{ subscription_org_id }}"
    - name: Set up DNS and DHCP services
      include_role:
        name: setup_support_services

    - name: Update OS
      dnf:
        name: "*"
        state: latest
      register: _os_update
    - name: Reboot if OS updated
      reboot:
        reboot_timeout: 600
      when: _os_update.changed == True
